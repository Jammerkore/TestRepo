//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace MID.MRS.Windows {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class AuditReclassDataSet : DataSet {
        
        private AuditReclassDataTableDataTable tableAuditReclassDataTable;
        
        public AuditReclassDataSet() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected AuditReclassDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["AuditReclassDataTable"] != null)) {
                    this.Tables.Add(new AuditReclassDataTableDataTable(ds.Tables["AuditReclassDataTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AuditReclassDataTableDataTable AuditReclassDataTable {
            get {
                return this.tableAuditReclassDataTable;
            }
        }
        
        public override DataSet Clone() {
            AuditReclassDataSet cln = ((AuditReclassDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["AuditReclassDataTable"] != null)) {
                this.Tables.Add(new AuditReclassDataTableDataTable(ds.Tables["AuditReclassDataTable"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableAuditReclassDataTable = ((AuditReclassDataTableDataTable)(this.Tables["AuditReclassDataTable"]));
            if ((this.tableAuditReclassDataTable != null)) {
                this.tableAuditReclassDataTable.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "AuditReclassDataSet";
            this.Prefix = "";
            this.Namespace = "";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableAuditReclassDataTable = new AuditReclassDataTableDataTable();
            this.Tables.Add(this.tableAuditReclassDataTable);
        }
        
        private bool ShouldSerializeAuditReclassDataTable() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void AuditReclassDataTableRowChangeEventHandler(object sender, AuditReclassDataTableRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AuditReclassDataTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSTART_TIME;
            
            private DataColumn columnPROCESS_ID;
            
            private DataColumn columnPROCESS_VALUE;
            
            private DataColumn columnRECLASS_SEQ;
            
            private DataColumn columnRECLASS_ACTION;
            
            private DataColumn columnRECLASS_ITEM_TYPE;
            
            private DataColumn columnRECLASS_ITEM;
            
            private DataColumn columnRECLASS_COMMENT;
            
            internal AuditReclassDataTableDataTable() : 
                    base("AuditReclassDataTable") {
                this.InitClass();
            }
            
            internal AuditReclassDataTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn START_TIMEColumn {
                get {
                    return this.columnSTART_TIME;
                }
            }
            
            internal DataColumn PROCESS_IDColumn {
                get {
                    return this.columnPROCESS_ID;
                }
            }
            
            internal DataColumn PROCESS_VALUEColumn {
                get {
                    return this.columnPROCESS_VALUE;
                }
            }
            
            internal DataColumn RECLASS_SEQColumn {
                get {
                    return this.columnRECLASS_SEQ;
                }
            }
            
            internal DataColumn RECLASS_ACTIONColumn {
                get {
                    return this.columnRECLASS_ACTION;
                }
            }
            
            internal DataColumn RECLASS_ITEM_TYPEColumn {
                get {
                    return this.columnRECLASS_ITEM_TYPE;
                }
            }
            
            internal DataColumn RECLASS_ITEMColumn {
                get {
                    return this.columnRECLASS_ITEM;
                }
            }
            
            internal DataColumn RECLASS_COMMENTColumn {
                get {
                    return this.columnRECLASS_COMMENT;
                }
            }
            
            public AuditReclassDataTableRow this[int index] {
                get {
                    return ((AuditReclassDataTableRow)(this.Rows[index]));
                }
            }
            
            public event AuditReclassDataTableRowChangeEventHandler AuditReclassDataTableRowChanged;
            
            public event AuditReclassDataTableRowChangeEventHandler AuditReclassDataTableRowChanging;
            
            public event AuditReclassDataTableRowChangeEventHandler AuditReclassDataTableRowDeleted;
            
            public event AuditReclassDataTableRowChangeEventHandler AuditReclassDataTableRowDeleting;
            
            public void AddAuditReclassDataTableRow(AuditReclassDataTableRow row) {
                this.Rows.Add(row);
            }
            
            public AuditReclassDataTableRow AddAuditReclassDataTableRow(System.DateTime START_TIME, int PROCESS_ID, string PROCESS_VALUE, int RECLASS_SEQ, string RECLASS_ACTION, string RECLASS_ITEM_TYPE, string RECLASS_ITEM, string RECLASS_COMMENT) {
                AuditReclassDataTableRow rowAuditReclassDataTableRow = ((AuditReclassDataTableRow)(this.NewRow()));
                rowAuditReclassDataTableRow.ItemArray = new object[] {
                        START_TIME,
                        PROCESS_ID,
                        PROCESS_VALUE,
                        RECLASS_SEQ,
                        RECLASS_ACTION,
                        RECLASS_ITEM_TYPE,
                        RECLASS_ITEM,
                        RECLASS_COMMENT};
                this.Rows.Add(rowAuditReclassDataTableRow);
                return rowAuditReclassDataTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                AuditReclassDataTableDataTable cln = ((AuditReclassDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new AuditReclassDataTableDataTable();
            }
            
            internal void InitVars() {
                this.columnSTART_TIME = this.Columns["START_TIME"];
                this.columnPROCESS_ID = this.Columns["PROCESS_ID"];
                this.columnPROCESS_VALUE = this.Columns["PROCESS_VALUE"];
                this.columnRECLASS_SEQ = this.Columns["RECLASS_SEQ"];
                this.columnRECLASS_ACTION = this.Columns["RECLASS_ACTION"];
                this.columnRECLASS_ITEM_TYPE = this.Columns["RECLASS_ITEM_TYPE"];
                this.columnRECLASS_ITEM = this.Columns["RECLASS_ITEM"];
                this.columnRECLASS_COMMENT = this.Columns["RECLASS_COMMENT"];
            }
            
            private void InitClass() {
                this.columnSTART_TIME = new DataColumn("START_TIME", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTART_TIME);
                this.columnPROCESS_ID = new DataColumn("PROCESS_ID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROCESS_ID);
                this.columnPROCESS_VALUE = new DataColumn("PROCESS_VALUE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROCESS_VALUE);
                this.columnRECLASS_SEQ = new DataColumn("RECLASS_SEQ", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRECLASS_SEQ);
                this.columnRECLASS_ACTION = new DataColumn("RECLASS_ACTION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRECLASS_ACTION);
                this.columnRECLASS_ITEM_TYPE = new DataColumn("RECLASS_ITEM_TYPE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRECLASS_ITEM_TYPE);
                this.columnRECLASS_ITEM = new DataColumn("RECLASS_ITEM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRECLASS_ITEM);
                this.columnRECLASS_COMMENT = new DataColumn("RECLASS_COMMENT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRECLASS_COMMENT);
            }
            
            public AuditReclassDataTableRow NewAuditReclassDataTableRow() {
                return ((AuditReclassDataTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new AuditReclassDataTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(AuditReclassDataTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AuditReclassDataTableRowChanged != null)) {
                    this.AuditReclassDataTableRowChanged(this, new AuditReclassDataTableRowChangeEvent(((AuditReclassDataTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AuditReclassDataTableRowChanging != null)) {
                    this.AuditReclassDataTableRowChanging(this, new AuditReclassDataTableRowChangeEvent(((AuditReclassDataTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AuditReclassDataTableRowDeleted != null)) {
                    this.AuditReclassDataTableRowDeleted(this, new AuditReclassDataTableRowChangeEvent(((AuditReclassDataTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AuditReclassDataTableRowDeleting != null)) {
                    this.AuditReclassDataTableRowDeleting(this, new AuditReclassDataTableRowChangeEvent(((AuditReclassDataTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveAuditReclassDataTableRow(AuditReclassDataTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AuditReclassDataTableRow : DataRow {
            
            private AuditReclassDataTableDataTable tableAuditReclassDataTable;
            
            internal AuditReclassDataTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableAuditReclassDataTable = ((AuditReclassDataTableDataTable)(this.Table));
            }
            
            public System.DateTime START_TIME {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableAuditReclassDataTable.START_TIMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAuditReclassDataTable.START_TIMEColumn] = value;
                }
            }
            
            public int PROCESS_ID {
                get {
                    try {
                        return ((int)(this[this.tableAuditReclassDataTable.PROCESS_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAuditReclassDataTable.PROCESS_IDColumn] = value;
                }
            }
            
            public string PROCESS_VALUE {
                get {
                    try {
                        return ((string)(this[this.tableAuditReclassDataTable.PROCESS_VALUEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAuditReclassDataTable.PROCESS_VALUEColumn] = value;
                }
            }
            
            public int RECLASS_SEQ {
                get {
                    try {
                        return ((int)(this[this.tableAuditReclassDataTable.RECLASS_SEQColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAuditReclassDataTable.RECLASS_SEQColumn] = value;
                }
            }
            
            public string RECLASS_ACTION {
                get {
                    try {
                        return ((string)(this[this.tableAuditReclassDataTable.RECLASS_ACTIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAuditReclassDataTable.RECLASS_ACTIONColumn] = value;
                }
            }
            
            public string RECLASS_ITEM_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableAuditReclassDataTable.RECLASS_ITEM_TYPEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAuditReclassDataTable.RECLASS_ITEM_TYPEColumn] = value;
                }
            }
            
            public string RECLASS_ITEM {
                get {
                    try {
                        return ((string)(this[this.tableAuditReclassDataTable.RECLASS_ITEMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAuditReclassDataTable.RECLASS_ITEMColumn] = value;
                }
            }
            
            public string RECLASS_COMMENT {
                get {
                    try {
                        return ((string)(this[this.tableAuditReclassDataTable.RECLASS_COMMENTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAuditReclassDataTable.RECLASS_COMMENTColumn] = value;
                }
            }
            
            public bool IsSTART_TIMENull() {
                return this.IsNull(this.tableAuditReclassDataTable.START_TIMEColumn);
            }
            
            public void SetSTART_TIMENull() {
                this[this.tableAuditReclassDataTable.START_TIMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsPROCESS_IDNull() {
                return this.IsNull(this.tableAuditReclassDataTable.PROCESS_IDColumn);
            }
            
            public void SetPROCESS_IDNull() {
                this[this.tableAuditReclassDataTable.PROCESS_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPROCESS_VALUENull() {
                return this.IsNull(this.tableAuditReclassDataTable.PROCESS_VALUEColumn);
            }
            
            public void SetPROCESS_VALUENull() {
                this[this.tableAuditReclassDataTable.PROCESS_VALUEColumn] = System.Convert.DBNull;
            }
            
            public bool IsRECLASS_SEQNull() {
                return this.IsNull(this.tableAuditReclassDataTable.RECLASS_SEQColumn);
            }
            
            public void SetRECLASS_SEQNull() {
                this[this.tableAuditReclassDataTable.RECLASS_SEQColumn] = System.Convert.DBNull;
            }
            
            public bool IsRECLASS_ACTIONNull() {
                return this.IsNull(this.tableAuditReclassDataTable.RECLASS_ACTIONColumn);
            }
            
            public void SetRECLASS_ACTIONNull() {
                this[this.tableAuditReclassDataTable.RECLASS_ACTIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsRECLASS_ITEM_TYPENull() {
                return this.IsNull(this.tableAuditReclassDataTable.RECLASS_ITEM_TYPEColumn);
            }
            
            public void SetRECLASS_ITEM_TYPENull() {
                this[this.tableAuditReclassDataTable.RECLASS_ITEM_TYPEColumn] = System.Convert.DBNull;
            }
            
            public bool IsRECLASS_ITEMNull() {
                return this.IsNull(this.tableAuditReclassDataTable.RECLASS_ITEMColumn);
            }
            
            public void SetRECLASS_ITEMNull() {
                this[this.tableAuditReclassDataTable.RECLASS_ITEMColumn] = System.Convert.DBNull;
            }
            
            public bool IsRECLASS_COMMENTNull() {
                return this.IsNull(this.tableAuditReclassDataTable.RECLASS_COMMENTColumn);
            }
            
            public void SetRECLASS_COMMENTNull() {
                this[this.tableAuditReclassDataTable.RECLASS_COMMENTColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class AuditReclassDataTableRowChangeEvent : EventArgs {
            
            private AuditReclassDataTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public AuditReclassDataTableRowChangeEvent(AuditReclassDataTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public AuditReclassDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
