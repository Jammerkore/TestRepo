CREATE PROCEDURE [dbo].[SP_GET_CHAIN_SET_PERCENT_REPORT] 
	@SELECTED_NODE_RID INT,
	@LOWER_LEVEL INT,
	@STORE_ID VARCHAR(50),
	@STORE_RID_LIST TEXT,
	@BEG_WEEK INT,
	@END_WEEK INT
AS
BEGIN
	CREATE TABLE #STORE_TEMP_TABLE (storeRID INT)

	/* Begin TT#701-MD -jsobek -Node Properties Overrides Report Issues */
	IF @STORE_ID IS NULL
	BEGIN
		IF @STORE_RID_LIST IS NULL
			OR datalength(@STORE_RID_LIST) = 0
		BEGIN
			INSERT #STORE_TEMP_TABLE
			SELECT ST.ST_RID
			FROM STORES ST
			WHERE ST.ACTIVE_IND = '1'
		END
		ELSE
		BEGIN
			INSERT #STORE_TEMP_TABLE
			SELECT *
			FROM dbo.UDF_MID_SPLIT_CSV_INT(@STORE_RID_LIST, ',')
		END
	END
	ELSE
	BEGIN
		INSERT #STORE_TEMP_TABLE
		SELECT ST.ST_RID
		FROM STORES ST
		WHERE ST.ACTIVE_IND = '1'
			AND ST.ST_ID = @STORE_ID
	END

	/* End TT#701-MD -jsobek -Node Properties Overrides Report Issues */
	DECLARE @SELECTED_NODE_LEVEL AS INT,
		@HOME_PH_RID AS INT

	SELECT @SELECTED_NODE_LEVEL = HOME_LEVEL,
		@HOME_PH_RID = HOME_PH_RID
	FROM HIERARCHY_NODE
	WHERE HN_RID = @SELECTED_NODE_RID

	DECLARE @MAX_PHL_SEQUENCE AS INT

	SELECT @MAX_PHL_SEQUENCE = MAX(PHL_SEQUENCE)
	FROM PRODUCT_HIERARCHY_LEVELS

	IF (@LOWER_LEVEL = 0)
	BEGIN
		SELECT @LOWER_LEVEL = @MAX_PHL_SEQUENCE
	END

	DECLARE @LEVEL AS INT

	SELECT @LEVEL = (@LOWER_LEVEL - @SELECTED_NODE_LEVEL) + 1

	SELECT @LEVEL = @LOWER_LEVEL - 1

	CREATE TABLE #TEMPNODE (
		PARENT_HN_RID INT,
		HN_RID INT,
		BN_ID VARCHAR(356) COLLATE Latin1_General_CS_AS,
		BN_NAME VARCHAR(50) COLLATE Latin1_General_CS_AS,
		BN_DESCRIPTION VARCHAR(250) COLLATE Latin1_General_CS_AS
		)

	INSERT #TEMPNODE (
		PARENT_HN_RID,
		HN_RID,
		BN_ID,
		BN_NAME,
		BN_DESCRIPTION
		)
	EXEC SP_GET_ALL_DESCENDANTS_BY_LEVEL_REPORT @SELECTED_NODE_RID,
		@LEVEL

	CREATE TABLE #CHAIN_SET_PERCENT_TABLE (
		HN_RID INT,
		BN_ID VARCHAR(356),
		ST_ID VARCHAR(50),
		STORE_NAME VARCHAR(50),
		SG_RID INT,
		SG_ID VARCHAR(50),
		SGL_RID INT,
		SGL_ID VARCHAR(50),
		SGL_SEQUENCE INT,
		PERCENTAGE FLOAT,
		TIME_ID INT
		)

	INSERT INTO #CHAIN_SET_PERCENT_TABLE
	SELECT hn.HN_RID,
	    -- Begin TT#5382 - JSmith - Product descriptor not displayed when the Store Eligibility is set at the color level
	    --[dbo].[UDF_MID_GET_NODE_DISPLAY_LEVEL](hn.HN_RID) AS [BN_ID],
		[dbo].[UDF_MID_GET_NODE_DISPLAY](hn.HN_RID) AS [BN_ID],
		-- End TT#5382 - JSmith - Product descriptor not displayed when the Store Eligibility is set at the color level
		ST_ID,
		STORE_NAME,
		--PHL_ID,
		SG_RID,
		SG_ID,
		SGL_RID,
		SGL_ID,
		SGL_SEQUENCE,
		PERCENTAGE,
		TIME_ID
	FROM (
		SELECT csps.HN_RID,
			coalesce(ST.ST_ID, '') AS ST_ID,
			coalesce(ST.STORE_NAME, '') AS STORE_NAME,
			--PHL_ID,
			sg.SG_RID,
			sg.SG_ID,
			sgl.SGL_RID,
			sgl.SGL_ID,
			sgl.SGL_SEQUENCE,
			csps.PERCENTAGE,
			'TIME_ID' = (
				SELECT FISCAL_WEEK
				FROM FISCAL_WEEKS
				WHERE FIRST_DAY_OF_WEEK = csps.TIME_ID
				)
		FROM STORE_GROUP_LEVEL sgl
		INNER JOIN STORE_GROUP sg ON sgl.SG_RID = sg.SG_RID
		INNER JOIN CHAIN_SET_PERCENT_SET csps ON sgl.SGL_RID = csps.SGL_RID
		LEFT OUTER JOIN STORE_GROUP_LEVEL_RESULTS SGLJ ON SGLJ.SGL_RID = sgl.SGL_RID
		LEFT OUTER JOIN STORES ST ON ST.ACTIVE_IND = '1'
			AND ST.ST_RID = SGLJ.ST_RID
		LEFT OUTER JOIN #STORE_TEMP_TABLE ON storeRID = ST.ST_RID
		WHERE csps.TIME_ID BETWEEN @BEG_WEEK
				AND @END_WEEK
		) AS T
	INNER JOIN (
		SELECT PARENT_HN_RID,
			HN_RID,
			BN_ID,
			BN_NAME,
			BN_DESCRIPTION
		FROM #TEMPNODE
		) hn ON hn.HN_RID = T.HN_RID

	SELECT *
	FROM #CHAIN_SET_PERCENT_TABLE
	ORDER BY BN_ID,
		SGL_SEQUENCE,
		TIME_ID

	IF (
			SELECT object_id('tempdb.dbo.#TEMPNODE')
			) > 0
		DROP TABLE #TEMPNODE

	DROP TABLE #CHAIN_SET_PERCENT_TABLE
END
GO


