CREATE PROCEDURE [dbo].[SP_MID_BUILD_ROLLUP_DCLR_ITEMS] 
	@PROCESS INT,
	@debug BIT = 0
AS
SET NOCOUNT ON

-- takes size intransit records and determines the styles for all sizes
DECLARE @HN_TYPE INT,
	@Loop INT,
	@SaveCount INT

CREATE TABLE #TEMP (
	LOOPCOUNT INT NOT NULL,
	PROCESS INT NOT NULL,
	HN_RID INT NOT NULL,
	TIME_ID INT NOT NULL,
	FV_RID INT NOT NULL,
	ITEM_TYPE INT NOT NULL,
	PH_RID INT NOT NULL,
	HOME_LEVEL INT NOT NULL,
	GENERATED_ITEM CHAR COLLATE database_default NOT NULL
	)

-- insert the node into the temp table
-- if @debug <> 0 select * from ROLLUP_ITEM
BEGIN TRANSACTION

INSERT #TEMP (
	LOOPCOUNT,
	PROCESS,
	HN_RID,
	TIME_ID,
	FV_RID,
	ITEM_TYPE,
	PH_RID,
	HOME_LEVEL,
	GENERATED_ITEM
	)
SELECT 0,
	ri.PROCESS,
	ri.HN_RID,
	ri.TIME_ID,
	ri.FV_RID,
	ri.ITEM_TYPE,
	ri.PH_RID,
	ri.HOME_LEVEL,
	'0'
FROM ROLLUP_ITEM ri WITH (NOLOCK)
WHERE ri.PROCESS = @PROCESS
	AND ri.ITEM_TYPE = 1100
	AND (
		ri.GENERATED_ITEM != '1'
		OR ri.GENERATED_ITEM IS NULL
		)

COMMIT

-- check to see if there are anything to do
SELECT @Loop = 0

SELECT TOP 1 *
FROM #TEMP

IF @@ROWCOUNT = 0
	RETURN

SET @SaveCount = @@ROWCOUNT

-- chase all sizes to style
WHILE @Loop < 2
BEGIN
	BEGIN TRANSACTION

	INSERT #TEMP (
		LOOPCOUNT,
		PROCESS,
		HN_RID,
		TIME_ID,
		FV_RID,
		ITEM_TYPE,
		PH_RID,
		HOME_LEVEL,
		GENERATED_ITEM
		)
	SELECT @Loop + 1,
		t.PROCESS,
		hnj.PARENT_HN_RID,
		t.TIME_ID,
		t.FV_RID,
		t.ITEM_TYPE,
		hn.HOME_PH_RID,
		hn.HOME_LEVEL,
		'1'
	FROM HIER_NODE_JOIN hnj WITH (NOLOCK)
	JOIN #TEMP t WITH (NOLOCK) ON hnj.HN_RID = t.HN_RID
	JOIN HIERARCHY_NODE hn WITH (NOLOCK) ON hn.HN_RID = hnj.PARENT_HN_RID
	JOIN PRODUCT_HIERARCHY ph WITH (NOLOCK) ON ph.PH_RID = hn.HOME_PH_RID
	WHERE t.LOOPCOUNT = @Loop
	  AND hnj.NODE_DELETE_IND = '0' -- TT#3630 - JSmith - Delete My Hierarchy

	COMMIT

	SET @Loop = @Loop + 1
END

IF @debug <> 0
	SELECT *
	FROM #TEMP
	ORDER BY LOOPCOUNT,
		HN_RID,
		TIME_ID,
		FV_RID,
		ITEM_TYPE

-- make table of unique style items
CREATE TABLE #TEMP2 (
	PROCESS INT NOT NULL,
	HN_RID INT NOT NULL,
	TIME_ID INT NOT NULL,
	FV_RID INT NOT NULL,
	ITEM_TYPE INT NOT NULL,
	PH_RID INT NOT NULL,
	HOME_LEVEL INT NOT NULL,
	GENERATED_ITEM CHAR COLLATE database_default NOT NULL
	)

BEGIN TRANSACTION

INSERT #TEMP2 (
	PROCESS,
	HN_RID,
	TIME_ID,
	FV_RID,
	ITEM_TYPE,
	PH_RID,
	HOME_LEVEL,
	GENERATED_ITEM
	)
SELECT DISTINCT ti.PROCESS,
	ti.HN_RID,
	ti.TIME_ID,
	ti.FV_RID,
	ti.ITEM_TYPE,
	ti.PH_RID,
	ti.HOME_LEVEL,
	ti.GENERATED_ITEM
FROM #TEMP ti
WHERE ti.LOOPCOUNT = 2

COMMIT

-- delete duplicate records
BEGIN TRANSACTION

DELETE #TEMP2
FROM #TEMP2 t
INNER JOIN ROLLUP_ITEM ON ROLLUP_ITEM.PROCESS = t.PROCESS
	AND ROLLUP_ITEM.HN_RID = t.HN_RID
	AND ROLLUP_ITEM.TIME_ID = t.TIME_ID
	AND ROLLUP_ITEM.ITEM_TYPE = t.ITEM_TYPE
	AND ROLLUP_ITEM.FV_RID = t.FV_RID
	AND ROLLUP_ITEM.GENERATED_ITEM = t.GENERATED_ITEM

COMMIT

IF @debug <> 0
	SELECT *
	FROM #TEMP2
	ORDER BY HOME_LEVEL,
		HN_RID,
		TIME_ID,
		FV_RID,
		ITEM_TYPE

-- remove original records
BEGIN TRANSACTION

DELETE
FROM ROLLUP_ITEM WITH (ROWLOCK)
WHERE PROCESS = @PROCESS
	AND ITEM_TYPE = 1100

COMMIT

-- insert records
BEGIN TRANSACTION

INSERT ROLLUP_ITEM (
	PROCESS,
	HN_RID,
	TIME_ID,
	FV_RID,
	ITEM_TYPE,
	PH_RID,
	HOME_LEVEL,
	FIRST_DAY_OF_WEEK,
	LAST_DAY_OF_WEEK,
	FIRST_DAY_OF_NEXT_WEEK,
	GENERATED_ITEM,
	ALTERNATES_ONLY
	)
SELECT ti.PROCESS,
	ti.HN_RID,
	ti.TIME_ID,
	ti.FV_RID,
	ti.ITEM_TYPE,
	ti.PH_RID,
	ti.HOME_LEVEL,
	0,
	0,
	0,
	'1',
	'N'
FROM #TEMP2 ti
WHERE ti.GENERATED_ITEM = '1'

COMMIT
SELECT @@ROWCOUNT
GO


