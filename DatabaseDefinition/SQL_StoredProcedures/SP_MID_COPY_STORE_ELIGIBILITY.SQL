--dv =============================================
--dv Modified date: 2/18/2014
--dv Flags: REFERENCED_FROM_SQL_ONLY
--dv Description: Utility stored procedure that copies store eligibility
--dv =============================================
CREATE PROCEDURE [dbo].[SP_MID_COPY_STORE_ELIGIBILITY] 
	@FromStoreID AS VARCHAR(50),
	@ToStoreID AS VARCHAR(50),
	@KeepOtherSettings BIT = 0,
	@Preview BIT = 0,
	@Return_Code INT = 0 OUTPUT
AS
SET NOCOUNT ON

DECLARE @FROM_ST_RID INT
DECLARE @TO_ST_RID INT
DECLARE @elig TABLE (
	[HN_RID] [int] NOT NULL,
	[ST_RID] [int] NOT NULL,
	[EM_RID] [int] NULL,
	[INELIGIBLE] [char](1) NULL,
	[STKMOD_TYPE] [int] NOT NULL,
	[STKMOD_RID] [int] NULL,
	[STKMOD_PCT] [float] NULL,
	[SLSMOD_TYPE] [int] NOT NULL,
	[SLSMOD_RID] [int] NULL,
	[SLSMOD_PCT] [float] NULL,
	[SIMILAR_STORE_TYPE] [int] NOT NULL,
	[SIMILAR_STORE_RATIO] [float] NULL,
	[UNTIL_DATE] [int] NULL,
	[USE_ELIGIBILITY] [char](1) NULL,
	[FWOSMOD_TYPE] [int] NULL,
	[FWOSMOD_RID] [int] NULL,
	[FWOSMOD_PCT] [float] NULL,
	[PRESENTATION_PLUS_SALES_IND] [char](1) NULL
	)
DECLARE @simStrs TABLE (
	[HN_RID] [int] NOT NULL,
	[ST_RID] [int] NOT NULL,
	[SS_RID] [int] NULL
	)

-- return codes
--  1: from store ID not found
--  2: to store ID not found
-- get record ID of from store
SELECT @FROM_ST_RID = ST_RID
FROM STORES(NOLOCK)
WHERE ST_ID = @FromStoreID

IF @@ROWCOUNT = 0
BEGIN
	SET @Return_Code = 1

	RETURN @Return_Code
END

-- get record ID of to store
SELECT @TO_ST_RID = ST_RID
FROM STORES(NOLOCK)
WHERE ST_ID = @ToStoreID

IF @@ROWCOUNT = 0
BEGIN
	SET @Return_Code = 2

	RETURN @Return_Code
END

IF @Preview <> 0
BEGIN
	SELECT 'FromStoreEligibility',
		st.ST_ID,
		se.HN_RID,
		bn.BN_ID,
		bn.BN_NAME,
		CASE 
			WHEN se.USE_ELIGIBILITY = 1
				AND se.INELIGIBLE = 1
				THEN 'True'
			WHEN se.USE_ELIGIBILITY = 0
				THEN NULL
			END AS [INELIGIBLE],
		se.EM_RID,
		em.EM_ID,
		se.STKMOD_TYPE,
		se.STKMOD_RID,
		se.STKMOD_PCT,
		se.SLSMOD_TYPE,
		se.SLSMOD_RID,
		se.SLSMOD_PCT,
		se.SIMILAR_STORE_TYPE,
		se.SIMILAR_STORE_RATIO,
		se.UNTIL_DATE,
		se.FWOSMOD_TYPE,
		se.FWOSMOD_RID,
		se.FWOSMOD_PCT,
		se.PRESENTATION_PLUS_SALES_IND
	FROM STORE_ELIGIBILITY se
	LEFT OUTER JOIN BASE_NODE bn ON bn.HN_RID = se.HN_RID
	INNER JOIN STORES st ON st.ST_RID = se.ST_RID
		AND st.ST_RID = @FROM_ST_RID
	LEFT OUTER JOIN ELIGIBILITY_MODEL em ON se.EM_RID = em.EM_RID
	WHERE se.ST_RID = @FROM_ST_RID

	SELECT 'ToStoreEligibility',
		st.ST_ID,
		se.HN_RID,
		bn.BN_ID,
		bn.BN_NAME,
		CASE 
			WHEN se.USE_ELIGIBILITY = 1
				AND se.INELIGIBLE = 1
				THEN 'True'
			WHEN se.USE_ELIGIBILITY = 0
				THEN NULL
			END AS [INELIGIBLE],
		se.EM_RID,
		em.EM_ID,
		se.STKMOD_TYPE,
		se.STKMOD_RID,
		se.STKMOD_PCT,
		se.SLSMOD_TYPE,
		se.SLSMOD_RID,
		se.SLSMOD_PCT,
		se.SIMILAR_STORE_TYPE,
		se.SIMILAR_STORE_RATIO,
		se.UNTIL_DATE,
		se.FWOSMOD_TYPE,
		se.FWOSMOD_RID,
		se.FWOSMOD_PCT,
		se.PRESENTATION_PLUS_SALES_IND
	FROM STORE_ELIGIBILITY se
	LEFT OUTER JOIN BASE_NODE bn ON bn.HN_RID = se.HN_RID
	INNER JOIN STORES st ON st.ST_RID = se.ST_RID
		AND st.ST_RID = @TO_ST_RID
	LEFT OUTER JOIN ELIGIBILITY_MODEL em ON se.EM_RID = em.EM_RID
	WHERE se.ST_RID = @TO_ST_RID
END
ELSE
BEGIN
	-- save a copy of the to store's original settings
	INSERT INTO @elig (
		HN_RID,
		ST_RID,
		EM_RID,
		INELIGIBLE,
		USE_ELIGIBILITY,
		STKMOD_TYPE,
		STKMOD_RID,
		STKMOD_PCT,
		SLSMOD_TYPE,
		SLSMOD_RID,
		SLSMOD_PCT,
		SIMILAR_STORE_TYPE,
		SIMILAR_STORE_RATIO,
		UNTIL_DATE,
		FWOSMOD_TYPE,
		FWOSMOD_RID,
		FWOSMOD_PCT,
		PRESENTATION_PLUS_SALES_IND
		)
	SELECT HN_RID,
		ST_RID,
		EM_RID,
		INELIGIBLE,
		USE_ELIGIBILITY,
		STKMOD_TYPE,
		STKMOD_RID,
		STKMOD_PCT,
		SLSMOD_TYPE,
		SLSMOD_RID,
		SLSMOD_PCT,
		SIMILAR_STORE_TYPE,
		SIMILAR_STORE_RATIO,
		UNTIL_DATE,
		FWOSMOD_TYPE,
		FWOSMOD_RID,
		FWOSMOD_PCT,
		PRESENTATION_PLUS_SALES_IND
	FROM STORE_ELIGIBILITY
	WHERE ST_RID = @TO_ST_RID

	INSERT INTO @simStrs (
		HN_RID,
		ST_RID,
		SS_RID
		)
	SELECT HN_RID,
		ST_RID,
		SS_RID
	FROM SIMILAR_STORES
	WHERE ST_RID = @TO_ST_RID

	-- delete all the to store's settings
	DELETE
	FROM SIMILAR_STORES
	WHERE ST_RID = @TO_ST_RID

	DELETE
	FROM STORE_ELIGIBILITY
	WHERE ST_RID = @TO_ST_RID

	-- copy all from store settings to to store settings
	INSERT INTO STORE_ELIGIBILITY (
		HN_RID,
		ST_RID,
		EM_RID,
		INELIGIBLE,
		USE_ELIGIBILITY,
		STKMOD_TYPE,
		STKMOD_RID,
		STKMOD_PCT,
		SLSMOD_TYPE,
		SLSMOD_RID,
		SLSMOD_PCT,
		SIMILAR_STORE_TYPE,
		SIMILAR_STORE_RATIO,
		UNTIL_DATE,
		FWOSMOD_TYPE,
		FWOSMOD_RID,
		FWOSMOD_PCT,
		PRESENTATION_PLUS_SALES_IND
		)
	SELECT HN_RID,
		@TO_ST_RID,
		EM_RID,
		INELIGIBLE,
		USE_ELIGIBILITY,
		0,
		NULL,
		0,
		0,
		NULL,
		0,
		0,
		- 1,
		NULL,
		0,
		NULL,
		0,
		NULL
	FROM STORE_ELIGIBILITY
	WHERE ST_RID = @FROM_ST_RID

	INSERT INTO SIMILAR_STORES (
		HN_RID,
		ST_RID,
		SS_RID
		)
	SELECT HN_RID,
		@TO_ST_RID,
		SS_RID
	FROM SIMILAR_STORES
	WHERE ST_RID = @FROM_ST_RID

	IF @KeepOtherSettings <> 0
	BEGIN
		-- blend eligibility settings
		UPDATE STORE_ELIGIBILITY
		SET STKMOD_TYPE = e.STKMOD_TYPE,
			STKMOD_RID = e.STKMOD_RID,
			STKMOD_PCT = e.STKMOD_PCT,
			SLSMOD_TYPE = e.SLSMOD_TYPE,
			SLSMOD_RID = e.SLSMOD_RID,
			SLSMOD_PCT = e.SLSMOD_PCT,
			SIMILAR_STORE_TYPE = e.SIMILAR_STORE_TYPE,
			SIMILAR_STORE_RATIO = e.SIMILAR_STORE_RATIO,
			UNTIL_DATE = e.UNTIL_DATE,
			FWOSMOD_TYPE = e.FWOSMOD_TYPE,
			FWOSMOD_RID = e.FWOSMOD_RID,
			FWOSMOD_PCT = e.FWOSMOD_PCT,
			PRESENTATION_PLUS_SALES_IND = e.PRESENTATION_PLUS_SALES_IND
		FROM STORE_ELIGIBILITY se
		JOIN @elig e ON e.HN_RID = se.HN_RID

		-- blend similar stores
		DELETE @simStrs
		FROM @simStrs s
		JOIN SIMILAR_STORES ss ON s.HN_RID = ss.HN_RID
			AND s.SS_RID = ss.SS_RID

		INSERT INTO SIMILAR_STORES (
			HN_RID,
			ST_RID,
			SS_RID
			)
		SELECT HN_RID,
			@TO_ST_RID,
			SS_RID
		FROM @simStrs
	END
END
GO


