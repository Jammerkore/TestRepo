--dv =============================================
--dv Create date:	9/24/2014
--dv Description:	Reads hierarchy nodes that have override values (vsw tab on node properties, main table is NODE_IMO)
--dv History:		TT#4041 -Node Properties Override report doesn't show decimals or FWOS Max Models
--dv =============================================
CREATE PROCEDURE [dbo].[MID_REPORT_READ_VSW_OVERRIDE] 
	@SELECTED_NODE_RID INT,
	@LOWER_LEVEL INT,
	@STORE_ID VARCHAR(255),
	@STORE_RID_LIST TEXT
AS
BEGIN
	CREATE TABLE #STORE_TEMP_TABLE (storeRID INT)

	/* Begin TT#701-MD -jsobek -Node Properties Overrides Report Issues */
	IF @STORE_ID IS NULL
	BEGIN
		IF @STORE_RID_LIST IS NULL
			OR datalength(@STORE_RID_LIST) = 0
		BEGIN
			INSERT #STORE_TEMP_TABLE
			SELECT ST.ST_RID
			FROM STORES ST
			WHERE ST.ACTIVE_IND = '1'
		END
		ELSE
		BEGIN
			INSERT #STORE_TEMP_TABLE
			SELECT *
			FROM dbo.UDF_MID_SPLIT_CSV_INT(@STORE_RID_LIST, ',')
		END
	END
	ELSE
	BEGIN
		INSERT #STORE_TEMP_TABLE
		SELECT ST.ST_RID
		FROM STORES ST
		WHERE ST.ACTIVE_IND = '1'
			AND ST.ST_ID = @STORE_ID
	END

	/* End TT#701-MD -jsobek -Node Properties Overrides Report Issues */
	DECLARE @SELECTED_NODE_LEVEL AS INT,
		@HOME_PH_RID AS INT

	SELECT @SELECTED_NODE_LEVEL = HOME_LEVEL,
		@HOME_PH_RID = HOME_PH_RID
	FROM HIERARCHY_NODE
	WHERE HN_RID = @SELECTED_NODE_RID

	DECLARE @MAX_PHL_SEQUENCE AS INT

	SELECT @MAX_PHL_SEQUENCE = MAX(PHL_SEQUENCE)
	FROM PRODUCT_HIERARCHY_LEVELS

	IF (@LOWER_LEVEL = 0)
	BEGIN
		SELECT @LOWER_LEVEL = @MAX_PHL_SEQUENCE
	END

	DECLARE @LEVEL AS INT

	SELECT @LEVEL = (@LOWER_LEVEL - @SELECTED_NODE_LEVEL) + 1

	SELECT @LEVEL = @LOWER_LEVEL - 1

	CREATE TABLE #TEMPNODE (
		PARENT_HN_RID INT,
		HN_RID INT,
		BN_ID VARCHAR(356) COLLATE Latin1_General_CS_AS,
		BN_NAME VARCHAR(50) COLLATE Latin1_General_CS_AS,
		BN_DESCRIPTION VARCHAR(250) COLLATE Latin1_General_CS_AS,
		HOME_LEVEL INT
		)

	INSERT #TEMPNODE (
		PARENT_HN_RID,
		HN_RID,
		BN_ID,
		BN_NAME,
		BN_DESCRIPTION,
		HOME_LEVEL
		)
	EXEC SP_GET_ALL_DESCENDANTS_BY_LEVEL_REPORT @SELECTED_NODE_RID,
		@LEVEL

	CREATE TABLE #VSW_TABLE (
		HN_RID INT,
		BN_ID VARCHAR(356),
		HOME_LEVEL INT,
		ST_ID VARCHAR(50),
		STORE_NAME VARCHAR(50),
		STORE_TEXT VARCHAR(200),
		SG_RID INT,
		SG_ID VARCHAR(50),
		SGL_RID INT,
		SGL_ID VARCHAR(50),
		VSW VARCHAR(50),
		MIN_SHIP_QTY INT,
		PERCENT_PACK_THRESHOLD FLOAT,
		ITEM_MAX_VALUE INT,
		--FWOS_MAX FLOAT,
		--FWOS_MAX_RID INT,
		FWOS_MAX_MODEL_NAME_OR_FLOAT VARCHAR(50),
		FWOS_MAX_TYPE INT,
		PUSH_TO_BACKSTOCK INT
		)

	INSERT INTO #VSW_TABLE
	SELECT hn.HN_RID,
	    -- Begin TT#5382 - JSmith - Product descriptor not displayed when the Store Eligibility is set at the color level
		--[dbo].[UDF_MID_GET_NODE_DISPLAY_LEVEL](hn.HN_RID) AS [BN_ID],
		[dbo].[UDF_MID_GET_NODE_DISPLAY](hn.HN_RID) AS [BN_ID],
		-- End TT#5382 - JSmith - Product descriptor not displayed when the Store Eligibility is set at the color level
		hn.HOME_LEVEL,
		ST_ID,
		STORE_NAME,
		[dbo].[UDF_MID_GET_STORE_TEXT](ST_RID) AS [STORE_TEXT],
		SG_RID,
		SG_ID,
		SGL_RID,
		SGL_ID,
		VSW,
		MIN_SHIP_QTY,
		PERCENT_PACK_THRESHOLD,
		ITEM_MAX_VALUE,
		--FWOS_MAX,
		--FWOS_MAX_RID,
		[dbo].[UDF_MID_GET_FWOS_MODEL_NAME_OR_FLOAT](FWOS_MAX_TYPE, FWOS_MAX_RID, FWOS_MAX) AS FWOS_MAX_MODEL_NAME_OR_FLOAT,
		FWOS_MAX_TYPE,
		PUSH_TO_BACKSTOCK
	FROM (
		SELECT IMO.HN_RID,
			ST.ST_ID,
			ST.STORE_NAME,
			ST.ST_RID,
			sg.SG_RID,
			sg.SG_ID,
			sgl.SGL_RID,
			sgl.SGL_ID,
			ST.IMO_ID AS VSW,
			IMO.IMO_MIN_SHIP_QTY AS MIN_SHIP_QTY,
			IMO.IMO_PCT_PK_THRSHLD AS PERCENT_PACK_THRESHOLD,
			IMO.IMO_MAX_VALUE AS ITEM_MAX_VALUE,
			IMO.IMO_FWOS_MAX AS FWOS_MAX,
			IMO.IMO_FWOS_MAX_RID AS FWOS_MAX_RID,
			IMO.IMO_FWOS_MAX_TYPE AS FWOS_MAX_TYPE,
			IMO.IMO_PSH_BK_STK AS PUSH_TO_BACKSTOCK
		FROM NODE_IMO IMO
		INNER JOIN STORES ST ON ST.ACTIVE_IND = '1'
			AND IMO.ST_RID = ST.ST_RID
		INNER JOIN #STORE_TEMP_TABLE ON storeRID = ST.ST_RID
		LEFT OUTER JOIN STORE_GROUP_LEVEL_RESULTS SGLJ ON ST.ST_RID = SGLJ.ST_RID
		LEFT OUTER JOIN STORE_GROUP_LEVEL sgl ON SGLJ.SGL_RID = sgl.SGL_RID
		LEFT OUTER JOIN STORE_GROUP sg ON sgl.SG_RID = sg.SG_RID
		) AS T
	INNER JOIN (
		SELECT PARENT_HN_RID,
			HN_RID,
			BN_ID,
			BN_NAME,
			BN_DESCRIPTION,
			HOME_LEVEL
		FROM #TEMPNODE
		) hn ON hn.HN_RID = T.HN_RID

	SELECT *
	FROM #VSW_TABLE
	WHERE SG_RID = 1
	ORDER BY BN_ID,
		SGL_RID

	--IF (
	--		SELECT object_id('tempdb.dbo.#TEMPNODE')
	--		) > 0
	IF OBJECT_ID('tempdb..#TEMPNODE') is not null
		DROP TABLE #TEMPNODE

	DROP TABLE #VSW_TABLE
END
GO