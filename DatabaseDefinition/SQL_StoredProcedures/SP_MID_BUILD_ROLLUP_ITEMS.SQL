--dv =============================================
--dv Modified date:	2/27/2017
--dv                TT#5485 - JSmith - Performance
--dv =============================================
CREATE PROCEDURE [dbo].[SP_MID_BUILD_ROLLUP_ITEMS] 
	@PROCESS INT,
	@PH_RID INT,
	@HN_RID INT,
	@FV_RID INT,
	--@TIME_ID INT,
	@TIME_ID VARCHAR(MAX),
	@ITEM_TYPE INT,
	@FROM_LEVEL INT,
	@TO_LEVEL INT,
	@FIRST_DAY_OF_WEEK INT,
	@LAST_DAY_OF_WEEK INT,
	@FIRST_DAY_OF_NEXT_WEEK INT
AS
SET NOCOUNT ON

DECLARE @HN_TYPE INT,
	@Loop INT,
	@StopLevel INT

CREATE TABLE #TEMP (
	tmpPARENT_HN_RID INT NOT NULL,
	tmpHOME_PH_RID INT,
	tmpHOME_LEVEL INT NOT NULL,
	tmpPH_TYPE INT,
	tmpHN_RID INT NOT NULL
	)
	
CREATE TABLE #TIME_IDS (
	tmpTIME_ID INT NOT NULL
	)

INSERT INTO #TIME_IDS SELECT * FROM dbo.UDF_MID_SPLIT_CSV_INT (@TIME_ID, ',')

-- insert the node into the temp table
INSERT #TEMP (
	tmpPARENT_HN_RID,
	tmpHOME_PH_RID,
	tmpHOME_LEVEL,
	tmpPH_TYPE,
	tmpHN_RID
	)
SELECT 0 AS tmpPARENT_HN_RID,
	hn.HOME_PH_RID,
	hn.HOME_LEVEL,
	ph.PH_TYPE,
	hn.HN_RID
FROM HIERARCHY_NODE hn WITH (NOLOCK)
JOIN PRODUCT_HIERARCHY ph WITH (NOLOCK) ON ph.PH_RID = hn.HOME_PH_RID
WHERE @HN_RID = hn.HN_RID

SELECT @Loop = tmpHOME_LEVEL
FROM #TEMP
WHERE tmpHN_RID = @HN_RID

-- include the from level is day to week and store to chain rolls
IF @ITEM_TYPE = 100
	OR @ITEM_TYPE = 500
BEGIN
	SELECT @StopLevel = @FROM_LEVEL
END
ELSE
BEGIN
	SELECT @StopLevel = @FROM_LEVEL - 1
END

-- chase all paths until you get to the from level or change hierarchies
WHILE @Loop < @StopLevel
BEGIN
	INSERT #TEMP
	SELECT hnj.PARENT_HN_RID,
		hn.HOME_PH_RID,
		hn.HOME_LEVEL,
		ph.PH_TYPE,
		hnj.HN_RID
	FROM HIER_NODE_JOIN hnj WITH (NOLOCK)
	JOIN HIERARCHY_NODE hn WITH (NOLOCK) ON hn.HN_RID = hnj.HN_RID
	JOIN PRODUCT_HIERARCHY ph WITH (NOLOCK) ON ph.PH_RID = hn.HOME_PH_RID
	JOIN #TEMP t ON hnj.PARENT_HN_RID = t.tmpHN_RID
	WHERE t.tmpHOME_LEVEL = @Loop
		AND hnj.PH_RID = @PH_RID
		AND hnj.NODE_DELETE_IND = '0'   -- TT#3630 - JSmith - Delete My Hierarchy
		AND COALESCE(hnj.VIRTUAL_IND, 0) = '0'  -- TT#3630 - JSmith - Delete My Hierarchy

	SET @Loop = @Loop + 1
END

-- remove all records not in hierarchy
DELETE
FROM #TEMP
WHERE tmpHOME_PH_RID != @PH_RID

-- check to see if there are any records to process
SELECT *
FROM #TEMP

IF @@ROWCOUNT = 0
	RETURN

SET NOCOUNT ON

DECLARE @STORE_TABLE_COUNT int;
SELECT @STORE_TABLE_COUNT=STORE_TABLE_COUNT FROM SYSTEM_OPTIONS

-- delete duplicate records
DELETE #TEMP
FROM #TEMP
INNER JOIN ROLLUP_ITEM ON ROLLUP_ITEM.PROCESS = @PROCESS
	AND ROLLUP_ITEM.HN_RID = tmpHN_RID
	--AND ROLLUP_ITEM.TIME_ID = @TIME_ID
	AND ROLLUP_ITEM.ITEM_TYPE = @ITEM_TYPE
	AND ROLLUP_ITEM.FV_RID = @FV_RID

INSERT ROLLUP_ITEM (
	PROCESS,
	HN_RID,
	TIME_ID,
	FV_RID,
	ITEM_TYPE,
	PH_RID,
	HOME_LEVEL,
	FIRST_DAY_OF_WEEK,
	LAST_DAY_OF_WEEK,
	FIRST_DAY_OF_NEXT_WEEK,
	HN_MOD
	)
SELECT DISTINCT @PROCESS AS PROCESS,
	tmpHN_RID,
	t.tmpTIME_ID AS TIME_ID,
	@FV_RID AS FV_RID,
	@ITEM_TYPE AS ITEM_TYPE,
	tmpHOME_PH_RID,
	tmpHOME_LEVEL,
	@FIRST_DAY_OF_WEEK AS FIRST_DAY_OF_WEEK,
	@LAST_DAY_OF_WEEK AS LAST_DAY_OF_WEEK,
	@FIRST_DAY_OF_NEXT_WEEK AS FIRST_DAY_OF_NEXT_WEEK,
	tmpHN_RID % @STORE_TABLE_COUNT AS HN_MOD
FROM #TEMP
CROSS JOIN #TIME_IDS t
WHERE tmpHOME_LEVEL > @TO_LEVEL - 1
GO


