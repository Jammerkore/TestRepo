CREATE PROCEDURE [dbo].[SP_GET_FORECAST_LEVEL_REPORT] 
	@SELECTED_NODE_RID INT,
	@LOWER_LEVEL INT,
	@ShowForecastLevel INT
AS
BEGIN
	DECLARE @SELECTED_NODE_LEVEL AS INT

	SELECT @SELECTED_NODE_LEVEL = HOME_LEVEL
	FROM HIERARCHY_NODE
	WHERE HN_RID = @SELECTED_NODE_RID

	DECLARE @MAX_PHL_SEQUENCE AS INT

	SELECT @MAX_PHL_SEQUENCE = MAX(PHL_SEQUENCE)
	FROM PRODUCT_HIERARCHY_LEVELS

	IF (@LOWER_LEVEL = 0)
	BEGIN
		SELECT @LOWER_LEVEL = @MAX_PHL_SEQUENCE
	END

	DECLARE @LEVEL AS INT

	--SELECT @LEVEL = (@LOWER_LEVEL - @SELECTED_NODE_LEVEL) + 1
	SELECT @LEVEL = @LOWER_LEVEL - 1

	CREATE TABLE #TEMP (
		PARENT_HN_RID INT,
		HN_RID INT,
		BN_ID VARCHAR(356) COLLATE Latin1_General_CS_AS,
		BN_NAME VARCHAR(50) COLLATE Latin1_General_CS_AS,
		BN_DESCRIPTION VARCHAR(250) COLLATE Latin1_General_CS_AS
		)

	INSERT #TEMP (
		PARENT_HN_RID,
		HN_RID,
		BN_ID,
		BN_NAME,
		BN_DESCRIPTION
		)
	EXEC SP_GET_ALL_DESCENDANTS_BY_LEVEL_REPORT @SELECTED_NODE_RID,
		@LEVEL

	SELECT bn.BN_ID,
		bn.BN_NAME,
		-- Begin TT#5382 - JSmith - Product descriptor not displayed when the Store Eligibility is set at the color level
		dbo.UDF_MID_GET_NODE_DISPLAY (hn1.HN_RID) AS [DISPLAY_TEXT],
		--CASE 
		--	WHEN phl.PHL_DISPLAY_OPTION_ID = 800701
		--		THEN RTRIM(bn.BN_ID)
		--	WHEN phl.PHL_DISPLAY_OPTION_ID = 800702
		--		THEN RTRIM(bn.BN_DESCRIPTION)
		--	WHEN phl.PHL_DISPLAY_OPTION_ID = 800703
		--		THEN RTRIM(bn.BN_ID) + ' [' + RTRIM(bn.BN_NAME) + ']'
		--	WHEN phl.PHL_DISPLAY_OPTION_ID = 800704
		--		THEN RTRIM(bn.BN_ID) + ' [' + RTRIM(bn.BN_DESCRIPTION) + ']'
		--	WHEN phl.PHL_DISPLAY_OPTION_ID = 800705
		--		THEN RTRIM(bn.BN_NAME) + ' [' + RTRIM(bn.BN_DESCRIPTION) + ']'
		--	WHEN phl.PHL_DISPLAY_OPTION_ID = 800706
		--		THEN RTRIM(bn.BN_ID) + ' [' + RTRIM(bn.BN_NAME) + ']' + ' [' + RTRIM(bn.BN_DESCRIPTION) + ']'
		--	ELSE RTRIM(bn.BN_ID) + ' [' + RTRIM(bn.BN_NAME) + ']'
		--	END AS [DISPLAY_TEXT],
		-- End TT#5382 - JSmith - Product descriptor not displayed when the Store Eligibility is set at the color level
		ph.PH_ID AS [HIERARCHY],
		CASE 
			WHEN hn1.OTS_FORECAST_LEVEL_SELECT_TYPE = 1
				THEN phl.PHL_ID
			ELSE NULL
			END AS [LEVEL],
		CASE 
			WHEN hn1.OTS_FORECAST_LEVEL_SELECT_TYPE = 1
				THEN NULL
			WHEN hn1.OTS_FORECAST_LEVEL_SELECT_TYPE = 2
				THEN CASE 
						WHEN hn1.OTS_FORECAST_LEVEL_MASK_FIELD = 1
							THEN 'Name'
						WHEN hn1.OTS_FORECAST_LEVEL_MASK_FIELD = 2
							THEN 'ID'
						WHEN hn1.OTS_FORECAST_LEVEL_MASK_FIELD = 3
							THEN 'Description'
						END
			END AS [MASK],
		CASE 
			WHEN hn1.OTS_FORECAST_LEVEL_SELECT_TYPE = 1
				THEN NULL
			WHEN hn1.OTS_FORECAST_LEVEL_SELECT_TYPE = 2
				THEN hn1.OTS_FORECAST_LEVEL_MASK
			END AS [MASK_VALUE]
	FROM HIERARCHY_NODE hn1
	INNER JOIN PRODUCT_HIERARCHY_LEVELS phl ON hn1.OTS_FORECAST_LEVEL_PH_RID = phl.PH_RID
		AND hn1.OTS_FORECAST_LEVEL_PHL_SEQUENCE = phl.PHL_SEQUENCE
	INNER JOIN BASE_NODE bn ON bn.HN_RID = hn1.HN_RID
	--INNER JOIN HIERARCHY_NODE hn2 ON hn2.HN_RID = hn1.OTS_FORECAST_LEVEL_ANCHOR_NODE
	INNER JOIN HIERARCHY_NODE hn2 ON hn2.HN_RID = hn1.HN_RID
	INNER JOIN PRODUCT_HIERARCHY ph ON hn2.HOME_PH_RID = ph.PH_RID
	INNER JOIN (
		SELECT PARENT_HN_RID,
			HN_RID,
			BN_ID,
			BN_NAME,
			BN_DESCRIPTION
		FROM #TEMP
		) hn ON hn.HN_RID = hn1.HN_RID
	WHERE @ShowForecastLevel = 1
	ORDER BY hn.PARENT_HN_RID,
		hn1.HN_RID

	IF (
			SELECT object_id('tempdb.dbo.#TEMP')
			) > 0
		DROP TABLE #TEMP
END
GO


