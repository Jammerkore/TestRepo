CREATE PROCEDURE [dbo].[SP_GET_FORECAST_AUDIT_MODIFYSALES_REPORT] 
	@SELECTED_NODE_RID INT,
	@LOWER_LEVEL INT,
	@FV_RID INT,
	@USER_RID INT,
	@TIME_RANGE_BEGIN VARCHAR(50),
	@TIME_RANGE_END VARCHAR(50),
	@USER_GROUP_RID INT
AS
BEGIN
	DECLARE @SELECTED_NODE_LEVEL AS INT

	SELECT @SELECTED_NODE_LEVEL = HOME_LEVEL
	FROM HIERARCHY_NODE
	WHERE HN_RID = @SELECTED_NODE_RID

	DECLARE @MAX_PHL_SEQUENCE AS INT

	SELECT @MAX_PHL_SEQUENCE = MAX(PHL_SEQUENCE)
	FROM PRODUCT_HIERARCHY_LEVELS

	IF (@LOWER_LEVEL = 0)
	BEGIN
		SELECT @LOWER_LEVEL = @MAX_PHL_SEQUENCE
	END

	DECLARE @LEVEL AS INT

	SELECT @LEVEL = (@LOWER_LEVEL - @SELECTED_NODE_LEVEL) + 1

	CREATE TABLE #TEMP (
		PARENT_HN_RID INT,
		HN_RID INT,
		BN_ID CHAR(356) COLLATE Latin1_General_CS_AS,
		BN_NAME CHAR(50) COLLATE Latin1_General_CS_AS,
		BN_DESCRIPTION CHAR(250) COLLATE Latin1_General_CS_AS
		)

	INSERT #TEMP (
		PARENT_HN_RID,
		HN_RID,
		BN_ID,
		BN_NAME,
		BN_DESCRIPTION
		)
	EXEC SP_GET_ALL_DESCENDANTS_BY_LEVEL_REPORT @SELECTED_NODE_RID,
		@LEVEL

	SELECT hyn.HOME_PH_RID,
		hn.PARENT_HN_RID,
		hn.HN_RID,
		hn.BN_ID,
		hn.BN_NAME,
		-- Begin TT#5382 - JSmith - Product descriptor not displayed when the Store Eligibility is set at the color level
		dbo.UDF_MID_GET_NODE_DISPLAY (hn.HN_RID) AS [DISPLAY_TEXT],
		--CASE 
		--	WHEN phl.PHL_DISPLAY_OPTION_ID = 800701
		--		THEN hn.BN_ID
		--	WHEN phl.PHL_DISPLAY_OPTION_ID = 800702
		--		THEN hn.BN_DESCRIPTION
		--	WHEN phl.PHL_DISPLAY_OPTION_ID = 800703
		--		THEN hn.BN_ID + '[' + hn.BN_NAME + ']'
		--	WHEN phl.PHL_DISPLAY_OPTION_ID = 800704
		--		THEN hn.BN_ID + '[' + hn.BN_DESCRIPTION + ']'
		--	WHEN phl.PHL_DISPLAY_OPTION_ID = 800705
		--		THEN hn.BN_NAME + '[' + hn.BN_DESCRIPTION + ']'
		--	WHEN phl.PHL_DISPLAY_OPTION_ID = 800706
		--		THEN hn.BN_ID + '[' + hn.BN_NAME + ']' + '[' + hn.BN_DESCRIPTION + ']'
		--	ELSE hn.BN_ID + '[' + hn.BN_NAME + ']'
		--	END AS [DISPLAY_TEXT],
		-- End TT#5382 - JSmith - Product descriptor not displayed when the Store Eligibility is set at the color level
		apt.TEXT_VALUE AS [MethodType],
		'Week ' + SUBSTRING(CONVERT(VARCHAR(20), af.TIME_RANGE_BEGIN), 5, 6) + '/' + SUBSTRING(CONVERT(VARCHAR(20), af.TIME_RANGE_BEGIN), 1, 4) AS [TIME_RANGE_BEGIN],
		'Week ' + SUBSTRING(CONVERT(VARCHAR(20), af.TIME_RANGE_END), 5, 6) + '/' + SUBSTRING(CONVERT(VARCHAR(20), af.TIME_RANGE_END), 1, 4) AS [TIME_RANGE_END],
		ams.FILTER_NAME AS [FilterName],
		SGL_ID AS [AtributeSet],
		ams.AVERAGE_BY AS [Average],
		au.USER_NAME,
		convert(VARCHAR(50), af.PROCESS_DATE_TIME) AS [PROCESS_DATE_TIME],
		af.METHOD_NAME AS [MethodName],
		amsm.GRADE_CODE AS [Grade_Code],
		amsm.BOUNDARY AS [Boundary],
		amsm.NUMBER_OF_STORES [Numberofstores],
		ap.TEXT_VALUE AS [Rule],
		amsm.MATRIX_RULE_QUANTITY AS [Qty]
	FROM AUDIT_FORECAST af
	INNER JOIN HIERARCHY_NODE hen ON hen.HN_RID = af.HN_RID
	LEFT OUTER JOIN PRODUCT_HIERARCHY_LEVELS phl ON phl.PHL_SEQUENCE = hen.HOME_LEVEL
	INNER JOIN (
		SELECT USER_RID
		FROM APPLICATION_USER
		WHERE USER_RID = @USER_RID
			AND @USER_RID <> 0
		
		UNION
		
		SELECT USER_RID
		FROM USER_GROUP_JOIN
		WHERE GROUP_RID = @USER_GROUP_RID
			AND @USER_GROUP_RID <> 0
			AND @USER_RID = 0
		) ug ON af.USER_RID = ug.USER_RID
	INNER JOIN HIERARCHY_NODE hyn ON af.HN_RID = hyn.HN_RID
	INNER JOIN APPLICATION_TEXT apt ON apt.TEXT_CODE = af.METHOD_TYPE
	INNER JOIN AUDIT_MODIFY_SALES ams ON ams.AUDIT_FORECAST_RID = af.AUDIT_FORECAST_RID
	INNER JOIN APPLICATION_USER au ON au.USER_RID = af.USER_RID
	INNER JOIN AUDIT_MODIFY_SALES_MATRIX amsm ON amsm.AUDIT_FORECAST_RID = af.AUDIT_FORECAST_RID
	INNER JOIN APPLICATION_TEXT ap ON ap.TEXT_CODE = amsm.MATRIX_RULE
	INNER JOIN STORE_GROUP_LEVEL sgl ON sgl.SGL_RID = amsm.SGL_RID
	INNER JOIN (
		SELECT PARENT_HN_RID,
			HN_RID,
			BN_ID,
			BN_NAME,
			BN_DESCRIPTION
		FROM #TEMP
		) hn ON hn.HN_RID = hyn.HN_RID
	WHERE (
			(
				@TIME_RANGE_BEGIN <> ''
				AND af.TIME_RANGE_BEGIN >= @TIME_RANGE_BEGIN
				)
			OR @TIME_RANGE_BEGIN = ''
			)
		AND (
			(
				@TIME_RANGE_END <> ''
				AND af.TIME_RANGE_END <= @TIME_RANGE_END
				)
			OR @TIME_RANGE_END = ''
			)
	ORDER BY hyn.HOME_PH_RID,
		hn.PARENT_HN_RID,
		hn.BN_ID,
		MethodType,
		MethodName,
		PROCESS_DATE_TIME,
		Grade_Code

	IF (
			SELECT object_id('tempdb.dbo.#TEMP')
			) > 0
		DROP TABLE #TEMP
END
GO


