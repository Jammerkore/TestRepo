CREATE PROCEDURE [dbo].[SP_MID_ND_SZ_OOS_HEADER_GET] 
	(@HN_RID INT)
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @HOME_PH_RID INT,
		@LOOPCOUNT INT,
		@SAVECOUNT INT,
		@ANC_HN_RID INT,
		@ANC_HOME_PH_RID INT,
		@ANC_HOME_LEVEL INT,
		@OUT_SG_RID INT,
		@OUT_SG_RID_IS_INHERITED INT,
		@OUT_SG_RID_IS_INHERITED_FROM INT,
		@OUT_SIZE_GROUP_RID INT,
		@OUT_SIZE_GROUP_RID_IS_INHERITED INT,
		@OUT_SIZE_GROUP_RID_IS_INHERITED_FROM INT,
		@TEMP_SG_RID INT,
		@TEMP_SIZE_GROUP_RID INT,
		@FIRST_LOOP INT

	SELECT @HOME_PH_RID = HOME_PH_RID
	FROM HIERARCHY_NODE WITH (NOLOCK)
	WHERE HN_RID = @HN_RID

	/* Get all Ancestors for the given Node */
	CREATE TABLE #TEMP1 (
		LOOPCOUNT INT NOT NULL,
		HN_RID INT NOT NULL,
		HOME_PH_RID INT NOT NULL,
		HOME_LEVEL INT NOT NULL
		)

	SELECT @HOME_PH_RID = HOME_PH_RID
	FROM HIERARCHY_NODE WITH (NOLOCK)
	WHERE HN_RID = @HN_RID

	INSERT #TEMP1 (
		LOOPCOUNT,
		HN_RID,
		HOME_PH_RID,
		HOME_LEVEL
		)
	SELECT 0,
		@HN_RID,
		HN.HOME_PH_RID,
		HN.HOME_LEVEL
	FROM HIERARCHY_NODE HN WITH (NOLOCK)
	WHERE HN.HN_RID = @HN_RID

	SET @SAVECOUNT = @@ROWCOUNT
	SET @LOOPCOUNT = 0

	WHILE @SAVECOUNT > 0
	BEGIN
		INSERT #TEMP1
		SELECT LOOPCOUNT = @LOOPCOUNT + 1,
			HN_RID = HNJ.PARENT_HN_RID,
			hn.HOME_PH_RID,
			hn.HOME_LEVEL
		FROM HIER_NODE_JOIN HNJ WITH (NOLOCK)
		JOIN #TEMP1 T1 ON HNJ.HN_RID = T1.HN_RID
		JOIN HIERARCHY_NODE hn WITH (NOLOCK) ON hn.HN_RID = HNJ.PARENT_HN_RID
		JOIN PRODUCT_HIERARCHY PH WITH (NOLOCK) ON PH.PH_RID = hn.HOME_PH_RID
		WHERE T1.LOOPCOUNT = @LOOPCOUNT
			AND PH.PH_RID = @HOME_PH_RID

		SET @SAVECOUNT = @@ROWCOUNT
		SET @LOOPCOUNT = @LOOPCOUNT + 1
	END

	SELECT DISTINCT HN_RID,
		HOME_PH_RID,
		HOME_LEVEL
	INTO #ANCESTORS
	FROM #TEMP1
	ORDER BY HOME_LEVEL DESC

	DROP TABLE #TEMP1

	/* Create Cursor to walk through Ancestors */
	SET @OUT_SG_RID = - 1
	SET @OUT_SIZE_GROUP_RID = - 1
	SET @OUT_SG_RID_IS_INHERITED = 0
	SET @OUT_SG_RID_IS_INHERITED_FROM = - 1
	SET @OUT_SIZE_GROUP_RID_IS_INHERITED = 0
	SET @OUT_SIZE_GROUP_RID_IS_INHERITED_FROM = - 1
	SET @FIRST_LOOP = 1

	DECLARE C1 CURSOR
	FOR
	SELECT HN_RID,
		HOME_PH_RID,
		HOME_LEVEL
	FROM #ANCESTORS

	OPEN C1

	FETCH NEXT
	FROM C1
	INTO @ANC_HN_RID,
		@ANC_HOME_PH_RID,
		@ANC_HOME_LEVEL

	WHILE @@FETCH_STATUS = 0
		AND (
			@OUT_SG_RID = - 1
			OR @OUT_SIZE_GROUP_RID = - 1
			)
	BEGIN
		SELECT @TEMP_SG_RID = NSO.SG_RID,
			@TEMP_SIZE_GROUP_RID = NSO.SIZE_GROUP_RID
		FROM NODE_SIZE_OUTOFSTOCK NSO WITH (NOLOCK)
		WHERE NSO.HN_RID = @ANC_HN_RID

		IF @OUT_SG_RID = - 1
			AND @TEMP_SG_RID <> - 1
		BEGIN
			SET @OUT_SG_RID = @TEMP_SG_RID

			IF @FIRST_LOOP <> 1
			BEGIN
				SET @OUT_SG_RID_IS_INHERITED = 1
				SET @OUT_SG_RID_IS_INHERITED_FROM = @ANC_HN_RID
			END
		END

		IF @OUT_SIZE_GROUP_RID = - 1
			AND @TEMP_SIZE_GROUP_RID <> - 1
		BEGIN
			SET @OUT_SIZE_GROUP_RID = @TEMP_SIZE_GROUP_RID

			IF @FIRST_LOOP <> 1
			BEGIN
				SET @OUT_SIZE_GROUP_RID_IS_INHERITED = 1
				SET @OUT_SIZE_GROUP_RID_IS_INHERITED_FROM = @ANC_HN_RID
			END
		END

		FETCH NEXT
		FROM C1
		INTO @ANC_HN_RID,
			@ANC_HOME_PH_RID,
			@ANC_HOME_LEVEL

		SET @FIRST_LOOP = 0
	END

	CLOSE C1

	DEALLOCATE C1

	IF @OUT_SG_RID = - 1
	BEGIN
		SELECT TOP 1 @OUT_SG_RID = DEFAULT_OTS_SG_RID,
			@OUT_SG_RID_IS_INHERITED = 1,
			@OUT_SG_RID_IS_INHERITED_FROM = - 1
		FROM SYSTEM_OPTIONS
	END

	/* Select to return values */
	SELECT @OUT_SG_RID AS SG_RID,
		@OUT_SG_RID_IS_INHERITED AS SG_RID_IS_INHERITED,
		@OUT_SG_RID_IS_INHERITED_FROM AS SG_RID_IS_INHERITED_FROM,
		@OUT_SIZE_GROUP_RID AS SIZE_GROUP_RID,
		@OUT_SIZE_GROUP_RID_IS_INHERITED AS SIZE_GROUP_RID_IS_INHERITED,
		@OUT_SIZE_GROUP_RID_IS_INHERITED_FROM AS SIZE_GROUP_RID_IS_INHERITED_FROM

	IF (
			SELECT OBJECT_ID('tempdb.dbo.#TEMP1')
			) > 0
		DROP TABLE #TEMP1

	IF (
			SELECT OBJECT_ID('tempdb.dbo.#ANCESTORS')
			) > 0
		DROP TABLE #ANCESTORS
END
GO


