CREATE PROCEDURE [dbo].[SP_MID_HIER_RECLASS_PROCESS] 
	@ProcessId INT,
	@HierarchyId VARCHAR(50)
AS
DECLARE @ORG_PH_RID INT
DECLARE @STYLE_LVL_SEQ INT

CREATE TABLE #CURRNODES (
	HIERARCHY_ID VARCHAR(50) COLLATE Latin1_General_CS_AS,
	PARENT_ID VARCHAR(50) COLLATE Latin1_General_CS_AS,
	PRODUCT_ID VARCHAR(50) COLLATE Latin1_General_CS_AS,
	PRODUCT_NAME VARCHAR(50) COLLATE Latin1_General_CS_AS,
	PRODUCT_DESC VARCHAR(250) COLLATE Latin1_General_CS_AS,
	HOME_PH_RID INT,
	HOME_LEVEL INT,
	PH_TYPE INT
	)

INSERT INTO #CURRNODES
EXEC SP_MID_HIER_RECLASS_GET_NODES @HierarchyId

SELECT @ORG_PH_RID = PH_RID
FROM PRODUCT_HIERARCHY
WHERE PH_TYPE = 800000

SELECT *
INTO #HIERTRANS
FROM HIERARCHY_RECLASS_TRANS
WHERE TRANS_PROCESS_ID = @ProcessId
	AND TRANS_HIERARCHY_ID = @HierarchyId
	AND TRANS_PARENT_ID NOT like '%\%'

/* Begin TT#2716 - JSmith - Hierarchy reclass creating hierarchy records for nodes that are already in hierarchy  */
SELECT TRANS_PROCESS_ID, TRANS_SEQUENCE, TRANS_ORIGINAL, TRANS_HIERARCHY_ID, TRANS_PARENT_ID, TRANS_PRODUCT_ID, TRANS_PRODUCT_NAME, TRANS_PRODUCT_DESC, 
	SUBSTRING(TRANS_PARENT_ID, 1, CHARINDEX('\', TRANS_PARENT_ID) - 1) AS STYLE,
	SUBSTRING(TRANS_PARENT_ID, CHARINDEX('\', TRANS_PARENT_ID) + 1, LEN(TRANS_PARENT_ID) - CHARINDEX('\', TRANS_PARENT_ID) + 1) AS COLOR, 
	TRANS_PRODUCT_ID AS SIZE
INTO #HIERTRANS_SUB
FROM HIERARCHY_RECLASS_TRANS
WHERE TRANS_PROCESS_ID = @ProcessId
	AND TRANS_HIERARCHY_ID = @HierarchyId
	AND TRANS_PARENT_ID like '%\%'

INSERT INTO #HIERTRANS
SELECT TRANS_PROCESS_ID, TRANS_SEQUENCE, TRANS_ORIGINAL, TRANS_HIERARCHY_ID, TRANS_PARENT_ID, TRANS_PRODUCT_ID, TRANS_PRODUCT_NAME, TRANS_PRODUCT_DESC 
FROM #HIERTRANS_SUB sub
WHERE sub.STYLE NOT IN (
	SELECT cn.STYLE_NODE_ID FROM dbo.HIERARCHY_NODE child
	INNER JOIN dbo.COLOR_NODE cn WITH (NOLOCK) ON cn.HN_RID = child.HN_RID
	INNER JOIN dbo.COLOR_CODE cc WITH (NOLOCK) ON cc.COLOR_CODE_RID = cn.COLOR_CODE_RID
	INNER JOIN dbo.HIER_NODE_JOIN stylejoin WITH (NOLOCK) ON stylejoin.HN_RID = child.HN_RID
		AND stylejoin.PH_RID = child.HOME_PH_RID
	INNER JOIN dbo.BASE_NODE style WITH (NOLOCK) ON style.HN_RID = stylejoin.PARENT_HN_RID,
	dbo.BASE_NODE size	
	INNER JOIN HIER_NODE_JOIN sizejoin WITH (NOLOCK) ON sizejoin.PARENT_HN_RID = size.HN_RID  
	INNER JOIN SIZE_GROUP_JOIN sizegrpjoin WITH (NOLOCK) ON sizegrpjoin.SIZE_GROUP_RID = sizejoin.HN_RID
	INNER JOIN SIZE_CODE sizecode WITH (NOLOCK) ON sizecode.SIZE_CODE_RID = sizegrpjoin.SIZE_CODE_RID
	WHERE cn.STYLE_NODE_ID = sub.STYLE AND cc.COLOR_CODE_ID = sub.COLOR AND sizecode.SIZE_CODE_ID = sub.SIZE
	)

SELECT HT.*,
	T1.*
INTO #ADDTRANS
FROM #HIERTRANS HT
LEFT OUTER JOIN #CURRNODES T1 ON HT.TRANS_HIERARCHY_ID = T1.HIERARCHY_ID
	AND HT.TRANS_PRODUCT_ID = T1.PRODUCT_ID
LEFT OUTER JOIN PRODUCT_HIERARCHY ph WITH (NOLOCK) ON ph.PH_ID = HT.TRANS_HIERARCHY_ID
WHERE HIERARCHY_ID IS NULL
	OR (
		HT.TRANS_PARENT_ID = T1.PARENT_ID
		AND (
			TRANS_PRODUCT_ID <> PRODUCT_ID
			OR (
				TRANS_PRODUCT_NAME <> PRODUCT_NAME
				AND T1.HOME_PH_RID = ph.PH_RID
				)
			OR (
				TRANS_PRODUCT_DESC <> PRODUCT_DESC
				AND T1.HOME_PH_RID = ph.PH_RID
				)
			)
		)

/* End TT#2716 - JSmith - Hierarchy reclass creating hierarchy records for nodes that are already in hierarchy  */
SELECT *
INTO #JOINEDNODES
FROM #CURRNODES T1
LEFT OUTER JOIN #HIERTRANS HT ON T1.HIERARCHY_ID = HT.TRANS_HIERARCHY_ID
	AND T1.PRODUCT_ID = HT.TRANS_PRODUCT_ID

SELECT *
INTO #DELETETRANS
FROM #JOINEDNODES
WHERE TRANS_HIERARCHY_ID IS NULL

SELECT *
INTO #MOVETRANS
FROM #JOINEDNODES
WHERE PARENT_ID <> TRANS_PARENT_ID

SELECT *
FROM #ADDTRANS
ORDER BY TRANS_SEQUENCE

SELECT *
FROM #DELETETRANS
WHERE HOME_LEVEL > 0
ORDER BY PH_TYPE ASC,
	HOME_LEVEL DESC

SELECT *
FROM #MOVETRANS

IF (
		SELECT object_id('tempdb.dbo.#CURRNODES')
		) > 0
	DROP TABLE #CURRNODES

IF (
		SELECT object_id('tempdb.dbo.#HIERTRANS')
		) > 0
	DROP TABLE #HIERTRANS
IF (
		SELECT object_id('tempdb.dbo.#HIERTRANS_SUB')
		) > 0
	DROP TABLE #HIERTRANS_SUB 
IF (
		SELECT object_id('tempdb.dbo.#ADDTRANS')
		) > 0
	DROP TABLE #ADDTRANS

IF (
		SELECT object_id('tempdb.dbo.#JOINEDNODES')
		) > 0
	DROP TABLE #JOINEDNODES

IF (
		SELECT object_id('tempdb.dbo.#DELETETRANS')
		) > 0
	DROP TABLE #DELETETRANS

IF (
		SELECT object_id('tempdb.dbo.#MOVETRANS')
		) > 0
	DROP TABLE #MOVETRANS
GO