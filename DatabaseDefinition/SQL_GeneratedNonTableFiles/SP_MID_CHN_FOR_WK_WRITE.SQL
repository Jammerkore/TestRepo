CREATE PROCEDURE [dbo].[SP_MID_CHN_FOR_WK_WRITE]
 
@dt MID_CHN_FOR_WK_TYPE READONLY,
@dtLock MID_CHN_FOR_WK_LOCK_TYPE READONLY,
@SaveLocks CHAR
AS
SET NOCOUNT ON
MERGE INTO CHAIN_FORECAST_WEEK with (ROWLOCK) AS TARGET
USING @dt AS SOURCE
on (SOURCE.HN_RID = TARGET.HN_RID and SOURCE.FV_RID = TARGET.FV_RID and SOURCE.TIME_ID = TARGET.TIME_ID)
WHEN MATCHED THEN
UPDATE 
         SET TARGET.SALES = COALESCE(SOURCE.SALES, TARGET.SALES),
             TARGET.SALES_REG = COALESCE(SOURCE.SALES_REG, TARGET.SALES_REG),
             TARGET.SALES_PROMO = COALESCE(SOURCE.SALES_PROMO, TARGET.SALES_PROMO),
             TARGET.SALES_MKDN = COALESCE(SOURCE.SALES_MKDN, TARGET.SALES_MKDN),
             TARGET.STOCK = COALESCE(SOURCE.STOCK, TARGET.STOCK),
             TARGET.STOCK_REG = COALESCE(SOURCE.STOCK_REG, TARGET.STOCK_REG),
             TARGET.STOCK_MKDN = COALESCE(SOURCE.STOCK_MKDN, TARGET.STOCK_MKDN),
             TARGET.WOS = COALESCE(SOURCE.WOS, TARGET.WOS),
             TARGET.WOS_REGPROMO = COALESCE(SOURCE.WOS_REGPROMO, TARGET.WOS_REGPROMO)
WHEN NOT MATCHED BY TARGET THEN
INSERT (HN_RID, FV_RID, TIME_ID, SALES, SALES_REG, SALES_PROMO, SALES_MKDN, STOCK, STOCK_REG, STOCK_MKDN, WOS, WOS_REGPROMO)
VALUES ( SOURCE.HN_RID, SOURCE.FV_RID, SOURCE.TIME_ID, SOURCE.SALES, SOURCE.SALES_REG, SOURCE.SALES_PROMO, SOURCE.SALES_MKDN,
      SOURCE.STOCK, SOURCE.STOCK_REG, SOURCE.STOCK_MKDN, SOURCE.WOS, SOURCE.WOS_REGPROMO);
if @SaveLocks = '1'
begin
MERGE INTO CHAIN_FORECAST_WEEK_LOCK with (ROWLOCK) AS TARGET
USING @dtLock AS SOURCE
on (SOURCE.HN_RID = TARGET.HN_RID and SOURCE.FV_RID = TARGET.FV_RID and SOURCE.TIME_ID = TARGET.TIME_ID)
WHEN MATCHED THEN
UPDATE 
         SET TARGET.SALES_LOCK = COALESCE(SOURCE.SALES_LOCK, TARGET.SALES_LOCK),
             TARGET.SALES_REG_LOCK = COALESCE(SOURCE.SALES_REG_LOCK, TARGET.SALES_REG_LOCK),
             TARGET.SALES_PROMO_LOCK = COALESCE(SOURCE.SALES_PROMO_LOCK, TARGET.SALES_PROMO_LOCK),
             TARGET.SALES_MKDN_LOCK = COALESCE(SOURCE.SALES_MKDN_LOCK, TARGET.SALES_MKDN_LOCK),
             TARGET.STOCK_LOCK = COALESCE(SOURCE.STOCK_LOCK, TARGET.STOCK_LOCK),
             TARGET.STOCK_REG_LOCK = COALESCE(SOURCE.STOCK_REG_LOCK, TARGET.STOCK_REG_LOCK),
             TARGET.STOCK_MKDN_LOCK = COALESCE(SOURCE.STOCK_MKDN_LOCK, TARGET.STOCK_MKDN_LOCK),
             TARGET.WOS_LOCK = COALESCE(SOURCE.WOS_LOCK, TARGET.WOS_LOCK),
             TARGET.WOS_REGPROMO_LOCK = COALESCE(SOURCE.WOS_REGPROMO_LOCK, TARGET.WOS_REGPROMO_LOCK)
WHEN NOT MATCHED BY TARGET THEN
INSERT (HN_RID, FV_RID, TIME_ID, SALES_LOCK, SALES_REG_LOCK, SALES_PROMO_LOCK, SALES_MKDN_LOCK, STOCK_LOCK, STOCK_REG_LOCK, STOCK_MKDN_LOCK, WOS_LOCK, 
     WOS_REGPROMO_LOCK)
VALUES ( SOURCE.HN_RID, SOURCE.FV_RID, SOURCE.TIME_ID, SOURCE.SALES_LOCK, SOURCE.SALES_REG_LOCK, SOURCE.SALES_PROMO_LOCK,
      SOURCE.SALES_MKDN_LOCK, SOURCE.STOCK_LOCK, SOURCE.STOCK_REG_LOCK, SOURCE.STOCK_MKDN_LOCK, SOURCE.WOS_LOCK,
      SOURCE.WOS_REGPROMO_LOCK);
end


GO


